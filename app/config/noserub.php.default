<?php

/**
 * The name of this NoseRub server. This is used for the title.
 * @name NOSERUB_APP_NAME
 */
define('NOSERUB_APP_NAME', 'NoseRub');

/**
 * The URL, under which your NoseRub installation
 * can be found. This could be http://myserver.com/ or
 * http://myserver.com/stuff/
 * Please make sure, you don't include the noserub directory.
 * That means, when you have NoseRub installed in
 * http://myserver.com/noserub/, you would have to enter only
 * http://myserver.com/ here. When your installation is available
 * directly under http://myserver.com/, just put http://myserver.com/ here.
 * @name NOSERUB_FULL_BASE_URL
 */
define('NOSERUB_FULL_BASE_URL', 'http://');

/**
 * Default Language for this installation
 */
Configure::write('Language.default', 'en-en'); # try 'de-de' :-)

/**
 * A hash value to protect some admin routes from execution by
 * non-authorized users. Such routes are eg the one for 
 * synchronizing accounts from external identities
 * @name NOSERUB_ADMIN_HASH
 */
define('NOSERUB_ADMIN_HASH', '');

/**
 * Similar to NOSERUB_ADMIN_HASH, but only used
 * for some cronjob routes that can called by URL with this
 * hash. Only needed, if you install NoseRub on a server
 * without access to the crontab.
 *
 * Don't use the same value for NOSERUB_ADMIN_HASH and NOSERUB_CRON_HASH!
 *
 * The URLs for these cronjobs are:
 * NOSERUB_FULL_BASE_URL/jobs/cron/NOSERUB_CRON_HASH/identities/sync/all/
 * NOSERUB_FULL_BASE_URL/jobs/cron/NOSERUB_CRON_HASH/cache/feed/refresh/
 *
 * These cronjobs can take some time to finish, so you might run into
 * problems with timeouts of the webserver you're using.
 */
define('NOSERUB_CRON_HASH', '');

/**
 * If set to "false", NoseRub will update the entries
 * for an account whenever you go to a user's page.
 * For better performance, you should set this to
 * "true" and add a cronjob for this purpose.
 */
define('NOSERUB_MANUAL_FEEDS_UPDATE', false);

/**
 * all = everyone can register
 * none = no one is allowed to register from that point on.
 *        all previously registered identities aren't altered
 * invitation = only the admin can invite people to register. 
 *              (this is yet not implemented)
 * @name: NOSERUB_REGISTRATION_TYPE
 */
define('NOSERUB_REGISTRATION_TYPE', 'all');

/**
 * E-Mail address, that is put into the From: header,
 * when sending out emails.
 *
 * @name: NOSERUB_EMAIL_FROM
 */
define('NOSERUB_EMAIL_FROM', 'info@...');

/**
 * When true, https (Port 443) is used for sensitive 
 * pages like /pages/login/ and /pages/register/
 */
define('NOSERUB_USE_SSL', false);

/**
 * We need a geocoder for get Latitude/Longitude for
 * given addresses. We use GoogleMaps for it and
 * also to display the map. You need to sign up
 * for a GoogleMaps API Key and can do so with no cost
 * here: http://www.google.com/apis/maps/signup.html
 * Make sure you enter the correct URL for the server
 * on which you want to use the API Key.
 * If set to false, no geocoding is done.
 */
define('NOSERUB_GOOGLE_MAPS_KEY', false);

/**
 * For better reliability, NoseRub can store some data to
 * a Content Delivery Network (CDN). You can enable the
 * usage of a CDN here. Please make sure you provide
 * access information to your CDN below.
 */
Configure::write('Noserub.use_cdn', false);

/**
 * You need to enter this three fields, when you want to
 * use Amazon S3 (http://s3.amazonaws.com) as CDN.
 * The access- and secret key will be provided in the settings
 * section of Amazon S3. You will need to create one "Bucket"
 * yourself. All data for this NoseRub installation will be
 * stored in that bucket.
 */
Configure::write('Noserub.cdn_s3_access_key', '');
Configure::write('Noserub.cdn_s3_secret_key', '');
Configure::write('Noserub.cdn_s3_bucket', 'cdn.mynoserubserver.com');

/**
 * If you want to restrict the email addresses of users that can register,
 * define this setting. You can add more than one host:
 * Configure::write('Noserub.registration_restricted_hosts', 'mycompany.com myothercompany.com');
 */
Configure::write('Noserub.registration_restricted_hosts', false);

Configure::write('Noserub.xmpp_full_feed_user', '');
Configure::write('Noserub.xmpp_full_feed_password', '');
Configure::write('Noserub.xmpp_full_feed_server', 'jabber.identoo.com');
Configure::write('Noserub.xmpp_full_feed_port', 5222);

/**
 * If you want your server being displayed on http://noserub.com/sites
 * and display the number of your registered users there, please contact
 * dirk.olbertz@gmail.com for listing on that page and set the following
 * value to 'true'.
 *
 * Beside the number of users on your site, this method also transfers
 * the settings Noserub.registration_restricted_hosts and 
 * NOSERUB_REGISTRATION_TYPE to noserub.com. In addition, information about
 * how up to date your installation is (id of newest database migration)
 * gathered, so we know which versions are used out there.
 *
 * We don't send the content of Noserub.registration_restricted_hosts, but
 * only the information, if this setting is used. If so, your site will be
 * flagged as "not public" on http://noserub.com/sites/.
 */
Configure::write('Noserub.api_info_active', false);

/**
 * If you, as the admin of this NoseRub installation do not feel
 * comfortable with the Twitter Bridge, you can deactivate it here
 * for every user on your site.
 */
Configure::write('Noserub.allow_twitter_bridge', true);

/**
 * Uncomment this line if you get the following error when you try 
 * to authenticate your OpenID: "Fatal error: Define 
 * Auth_OpenID_RAND_SOURCE as null to continue with an insecure 
 * random number generator".
 * You can also define your own source of randomness here if you
 * want use a source different than /dev/urandom.
 */
// define('Auth_OpenID_RAND_SOURCE', null);